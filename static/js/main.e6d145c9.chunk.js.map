{"version":3,"sources":["Component/Nav.js","Component/Header.js","Component/Controls.js","Component/Create.js","Component/Update.js","Component/Contents.js","App.js","index.js"],"names":["StlyedNav","styled","nav","StlyedTitle","div","StyledList","li","Nav","list","onClick","map","listItem","href","id","title","StyledHeader","header","StyledSubtitle","p","Header","text","StlyedControls","ul","StyledBtn","button","Controls","saveLocal","getList","currentValue","controls","listFilter","filter","item","control","undefined","window","confirm","deleteList","parseInt","console","log","StyledForm","StyledModeTitle","h2","StyledInput","input","StyledTextarea","textarea","StyledSubmit","Create","onSubmit","mode","type","placeholder","defaultValue","value","Update","handleTitleUpdate","mainTitle","onClickUpdate","name","StyledContentArticle","article","StyledContentsTitle","StlyedContentsText","Contents","saveTitle","getInfo","getProps","e","preventDefault","childNodes","target","parentNode","changeTitle","listCopy","concat","indexOf","App","useState","setMainTitle","setList","useEffect","currentList","localStorage","getItem","parsedList","JSON","parse","currentTitle","parsedTitle","currentLSValue","parsedValue","setId","loadList","setMode","setCurrentValue","setItem","stringify","saveCurrentValue","innerHTML","concatList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6d145c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StlyedNav = styled.nav`\r\n    box-sizing: border-box;\r\n    width: 250px;\r\n    height: 500px;\r\n    position: fixed;\r\n    top: 150px;\r\n    left: 0px;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\r\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\r\n    padding: 30px;\r\n    overflow-y: auto;\r\n    white-space:normal;\r\n    &::-webkit-scrollbar {\r\n        width: 15px;\r\n        background: #f7d6b9;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: #F8C291;\r\n        border-radius: 15px;\r\n    }\r\n\r\n`\r\nconst StlyedTitle = styled.div`\r\n    font-size: 25px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nconst StyledList = styled.li`\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Nav = ({ list, onClick }) => {\r\n    \r\n    return(\r\n    <StlyedNav>\r\n        <StlyedTitle>List</StlyedTitle>\r\n        <ul>\r\n            {list.map((listItem) => {\r\n                return  <StyledList key={listItem.id}  >\r\n                            <a href=\"#\" id={listItem.id} onClick={onClick} >{listItem.title}</a>\r\n                        </StyledList>\r\n            })}\r\n        </ul>\r\n    </StlyedNav>    \r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst StyledHeader = styled.header`\r\n    min-width : 100px;\r\n    height : 60px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    font-size: 30px;\r\n`\r\nconst StyledSubtitle = styled.p`\r\n    font-size: 22px;\r\n    margin-top: 5px;\r\n`\r\n\r\nconst Header = ({text, onClick}) => {\r\n    return(\r\n        <StyledHeader onClick={onClick}>\r\n            <a href=\"#\">\r\n              <h1>{text.title}</h1>\r\n            </a>\r\n            <StyledSubtitle>{text.text}</StyledSubtitle>\r\n        </StyledHeader>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StlyedControls = styled.ul`\r\n    width: 100px;\r\n    height: 100px;\r\n    position : absolute;\r\n    right: -150px;\r\n    bottom: 0px;\r\n    background: white;\r\n    border-radius: 10px;\r\n    font-size: 22px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25), 0 3px 7px -3px #0000004d;\r\n`\r\nconst StyledBtn = styled.button`\r\n    border: none;\r\n    font-size: 22px;\r\n    color: red;\r\n    font-family: \"Do Hyeon\", sans-serif;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    outline : none;\r\n`\r\n\r\n\r\nconst Controls = ({saveLocal, getList, list, currentValue, controls, onClick}) => {\r\n    const listFilter = list.filter(item => {\r\n        return currentValue == item.id\r\n    })\r\n\r\n    const handleClickDelete = () => {\r\n        if(list[0] === undefined || currentValue === 0){\r\n            return null;\r\n        } else {\r\n            const cf = window.confirm(`${listFilter[0].title}을 삭제하시겠습니까?`);\r\n            if(cf === true){\r\n                const deleteList = list.filter(item => {\r\n                    return parseInt(currentValue) !== item.id\r\n                })\r\n                console.log(typeof(currentValue))\r\n                console.log(deleteList);\r\n                getList(deleteList);\r\n                saveLocal(deleteList);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <StlyedControls>\r\n            {controls.map(control => {\r\n                return <li key={control.id}><a href=\"#\" onClick={onClick}>{control.title}</a></li>\r\n            })}\r\n            <StyledBtn onClick={handleClickDelete} >Delete</StyledBtn>\r\n        </StlyedControls>\r\n    )\r\n}\r\n\r\nexport default Controls;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledForm = styled.div`\r\n    height: 350px;\r\n    margin-top: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst StyledModeTitle = styled.h2`\r\n    font-size: 22px;\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n`\r\nconst StyledInput = styled.input`\r\n    font-family: \"Do Hyeon\", sans-serif;\r\n    border: 3px solid #f8c291;\r\n    border-radius: 10px;\r\n    margin-bottom: 20px;\r\n    height: 40px;\r\n    outline: none;\r\n    font-size: 22px;\r\n    &::placeholder {\r\n        font-family: \"Do Hyeon\", sans-serif;\r\n    }\r\n    &:focus {\r\n        background: #c8d6e5;\r\n    }\r\n`\r\n\r\nconst StyledTextarea = styled.textarea`\r\n    font-family: \"Do Hyeon\", sans-serif;\r\n    resize: none;\r\n    height: 200px;\r\n    border: 3px solid #f8c291;\r\n    white-space:normal;\r\n    margin-bottom: 20px;\r\n    overflow: auto;\r\n    outline: none;\r\n    font-size: 22px;\r\n    padding: 5px;\r\n    border-radius: 10px;\r\n    &::placeholder {\r\n        font-family: \"Do Hyeon\", sans-serif;\r\n    }\r\n    &:focus {\r\n        background: #c8d6e5;\r\n    }\r\n    &::-webkit-scrollbar {\r\n        width: 15px;\r\n        background: #f7d6b9;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: #F8C291;\r\n        border-radius: 15px;\r\n    }\r\n`\r\n\r\nconst StyledSubmit = styled.input`\r\n    font-family: \"Do Hyeon\", sans-serif;\r\n    border: none;\r\n    background-color: #f8c291;\r\n    width: 100px;\r\n    height: 50px;\r\n    border-radius: 15px;\r\n    color : white;\r\n    font-size: 20px;\r\n    margin: 0 auto;\r\n    outline: none;\r\n    cursor: pointer;\r\n    transition: 0.2s all;\r\n    &:active {\r\n        transform: scale(0.9);\r\n    }\r\n`\r\n\r\nconst Create = ({onClick, onSubmit, mode}) => {\r\n    return(\r\n        <StyledForm onSubmit={onSubmit}>\r\n            <StyledModeTitle>{mode}</StyledModeTitle>\r\n            <StyledInput type=\"text\" placeholder=\"제목을 입력해주세요!\"/>\r\n            <StyledTextarea  placeholder=\"내용을 입력해주세요!\" defaultValue=\"\" ></StyledTextarea>\r\n            <StyledSubmit type=\"button\" value=\"Submit\" onClick={onClick} />\r\n        </StyledForm>\r\n    )\r\n}\r\nexport default Create;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledForm = styled.div`\r\n    height: 350px;\r\n    margin-top: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst StyledModeTitle = styled.h2`\r\n    font-size: 22px;\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n`\r\nconst StyledInput = styled.input`\r\n    border: 3px solid #f8c291;\r\n    border-radius: 10px;\r\n    margin-bottom: 20px;\r\n    height: 40px;\r\n    outline: none;\r\n    font-size: 22px;\r\n    font-family: \"Do Hyeon\", sans-serif;\r\n    &::placeholder {\r\n        font-family: \"Do Hyeon\", sans-serif;\r\n    }\r\n    &:focus {\r\n        background: #c8d6e5;\r\n    }\r\n`\r\n\r\nconst StyledTextarea = styled.textarea`\r\n    font-family: \"Do Hyeon\", sans-serif;\r\n    resize: none;\r\n    height: 200px;\r\n    border: 3px solid #f8c291;\r\n    margin-bottom: 20px;\r\n    overflow: auto;\r\n    outline: none;\r\n    font-size: 22px;\r\n    padding: 5px;\r\n    border-radius: 10px;\r\n    &::placeholder {\r\n        font-family: \"Do Hyeon\", sans-serif;\r\n    }\r\n    &:focus {\r\n        background: #c8d6e5;\r\n    }\r\n    &::-webkit-scrollbar {\r\n        width: 15px;\r\n        background: #f7d6b9;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: #F8C291;\r\n        border-radius: 15px;\r\n    }\r\n`\r\n\r\nconst StyledSubmit = styled.input`\r\n    font-family: \"Do Hyeon\", sans-serif;\r\n    border: none;\r\n    background-color: #f8c291;\r\n    width: 100px;\r\n    height: 50px;\r\n    border-radius: 15px;\r\n    color : white;\r\n    font-size: 20px;\r\n    margin: 0 auto;\r\n    outline: none;\r\n    cursor: pointer;\r\n    transition: 0.2s all;\r\n    &:active {\r\n        transform: scale(0.9);\r\n    }\r\n`\r\n\r\nconst Update = ({list, handleTitleUpdate, currentValue, mainTitle, mode, listFilter, onClickUpdate}) => {\r\n    if(currentValue === 0){\r\n        return (\r\n            <StyledForm>\r\n                <StyledModeTitle>{mode}</StyledModeTitle>\r\n                <StyledInput name=\"title\" type=\"text\" defaultValue={mainTitle.title} placeholder=\"제목을 입력하세요.\"/>\r\n                <StyledTextarea name=\"text\" placeholder=\"description\" defaultValue={mainTitle.text}></StyledTextarea>\r\n                <StyledSubmit type=\"button\" value=\"Submit\" onClick={handleTitleUpdate} />\r\n            </StyledForm>\r\n        )\r\n    }else {\r\n        if(list[0] === undefined){\r\n            return null;\r\n        }\r\n        return (\r\n            <StyledForm>\r\n                <StyledModeTitle>{mode}</StyledModeTitle>\r\n                <StyledInput type=\"text\" defaultValue={list[0] === undefined ? null : listFilter[0].title} placeholder=\"제목을 입력하세요.\"/>\r\n                <StyledTextarea placeholder=\"description\" defaultValue={list[0] === undefined ? null : listFilter[0].text}></StyledTextarea>\r\n                <StyledSubmit type=\"button\" value=\"Submit\" onClick={onClickUpdate} />\r\n            </StyledForm>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Update;","import React from 'react';\r\nimport Create from './Create';\r\nimport Update from './Update';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledContentArticle = styled.article `\r\n    height: 350px;\r\n    margin-top: 30px;\r\n`\r\n\r\nconst StyledContentsTitle = styled.h2`\r\n    font-size: 22px;\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n    border: 3px solid #f8c291;\r\n    border-radius:10px;\r\n    overflow: auto;\r\n    &::-webkit-scrollbar {\r\n        width: 15px;\r\n        background: #f7d6b9;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: #F8C291;\r\n        border-radius: 15px;\r\n    }\r\n`\r\n\r\nconst StlyedContentsText = styled.div`\r\n    \r\n    height: 200px;\r\n    padding: 20px;\r\n    overflow-y: auto;\r\n    white-space:pre-wrap;\r\n    border: 3px solid #f8c291;\r\n    border-radius: 10px;\r\n    &::-webkit-scrollbar {\r\n        width: 15px;\r\n        background: #f7d6b9;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: #F8C291;\r\n        border-radius: 15px;\r\n    }\r\n`\r\n\r\nconst Contents = ({ saveTitle, saveLocal, getInfo, currentValue, mainTitle, list, onSubmit, onClick, mode, getProps, id })=> {\r\n    const listFilter = list.filter(item => {\r\n        return currentValue == item.id\r\n    })\r\n    \r\n    const handleClickUpdate = e => {\r\n        if(mode === \"\" && currentValue === 1 && list[0] === undefined){\r\n            return;\r\n        } else{\r\n            e.preventDefault();\r\n            const target = e.target.parentNode;\r\n            const childNodes = target.childNodes;\r\n            let title = childNodes[1].value;\r\n            let text = childNodes[2].value;  \r\n            const listItem = {\r\n                title : title,\r\n                text : text,\r\n                id : listFilter[0].id\r\n            }\r\n\r\n            if(title === \"\"){\r\n                return;\r\n            }else {\r\n                let listCopy = list.concat();\r\n                listCopy[list.indexOf(listFilter[0])] = listItem;\r\n                getProps(listCopy);\r\n                saveLocal(listCopy);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleTitleUpdate = e => {\r\n        e.preventDefault();\r\n        const target = e.target.parentNode;\r\n        const childNodes = target.childNodes;\r\n        let title = childNodes[1].value;\r\n        let text = childNodes[2].value;\r\n        if(title === \"\"){\r\n            return;\r\n        } else {\r\n            const changeTitle = {\r\n                ...mainTitle,\r\n                [childNodes[1].name] : title,\r\n                [childNodes[2].name] : text \r\n            }\r\n            getInfo(changeTitle);\r\n            saveTitle(changeTitle);\r\n        }\r\n        \r\n    }\r\n    \r\n    if(mode === \"\"){\r\n        if(currentValue === 0){\r\n            return (\r\n                <StyledContentArticle>\r\n                    <StyledContentsTitle>{mainTitle.title}</StyledContentsTitle>   \r\n                    <StlyedContentsText>{mainTitle.text}</StlyedContentsText>\r\n                </StyledContentArticle>\r\n            )\r\n        } else {\r\n            return(\r\n                <StyledContentArticle>\r\n                    <StyledContentsTitle>{list[0] == undefined ? null :listFilter[0].title}</StyledContentsTitle>\r\n                    <StlyedContentsText>{list[0] == undefined ? null : listFilter[0].text}</StlyedContentsText>\r\n                </StyledContentArticle>\r\n            )        \r\n        }\r\n    } else if(mode === \"Create\" || mode === \"Update\" || mode === \"Delete\"){\r\n        if(mode === \"Create\"){\r\n            return(\r\n                <Create mode={mode} onSubmit={onSubmit} onClick={onClick}></Create>\r\n            )\r\n        } else if(mode === \"Update\"){\r\n            return(\r\n                <Update list={list} handleTitleUpdate={handleTitleUpdate} currentValue={currentValue} mainTitle={mainTitle} getProps={getProps} onClickUpdate={handleClickUpdate} mode={mode} listFilter={listFilter} onClick={onClick}></Update>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Contents;","import React, {useState, useRef, useEffect} from 'react';\r\nimport Nav from './Component/Nav';\r\nimport Header from './Component/Header';\r\nimport Controls from './Component/Controls';\r\nimport Contents from './Component/Contents'\r\n\r\nfunction App() {\r\n  //Nav \r\n  const [mainTitle, setMainTitle] = useState(\r\n    {\r\n      title : \"React\",\r\n      text : \"CRUD\",\r\n      id : 1\r\n    } \r\n  )\r\n\r\n  const [ list, setList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadList = () => {\r\n      const currentList = localStorage.getItem(\"list\");\r\n      if (currentList !== null) {\r\n        const parsedList = JSON.parse(currentList);\r\n        setList(parsedList);\r\n      }\r\n      const currentTitle = localStorage.getItem(\"title\");\r\n      if( currentTitle !== null) {\r\n        const parsedTitle = JSON.parse(currentTitle);\r\n        setMainTitle(parsedTitle);\r\n      }\r\n      const currentLSValue = localStorage.getItem(\"id\");\r\n      if( currentLSValue !== null) {\r\n        const parsedValue = JSON.parse(currentLSValue);\r\n        setId(parsedValue+1);\r\n      }\r\n    }\r\n  loadList();\r\n  },[])\r\n\r\n  const [id, setId] = useState(1);\r\n  const [mode, setMode] = useState(\"\");\r\n  const [controls, setControl] = useState([\r\n    {\r\n      title : \"Create\",\r\n      id : 1\r\n    },\r\n    {\r\n      title : \"Update\",\r\n      id : 2\r\n    }\r\n  ])\r\n  const [ currentValue, setCurrentValue ] = useState(0);\r\n\r\n  const handleTitleClick = () => {\r\n    setCurrentValue(0);\r\n    setMode(\"\");\r\n  }\r\n\r\n  const handleNavClick = e => {\r\n    setCurrentValue(e.target.id);\r\n    setMode(\"\");\r\n  }\r\n\r\n  const handleControlClick = e => {\r\n    setMode(e.target.innerHTML);\r\n  }\r\n\r\n\r\n  const handleContentsClick = e => {\r\n    e.preventDefault();\r\n    const target = e.target.parentNode;\r\n    const childNodes = target.childNodes;\r\n    let title = childNodes[1].value;\r\n    let text = childNodes[2].value;\r\n    if(childNodes[1].value === \"\" ){\r\n      return;\r\n    } else {\r\n      const concatList = list.concat({\r\n        title : title,\r\n        text : text,\r\n        id : id,\r\n      })\r\n      setId(id+1)\r\n      setList(concatList);\r\n      setCurrentValue(id);\r\n      childNodes[1].value = \"\";\r\n      childNodes[2].value = \"\";\r\n      saveLocal(concatList);\r\n      saveCurrentValue(id);\r\n    }\r\n  }\r\n\r\n  const getProps = (item) => {\r\n    setMode(\"\");\r\n    setList(item);\r\n  }\r\n\r\n  const getInfo = (item) => {\r\n    setMode(\"\");\r\n    setMainTitle(item)\r\n  }\r\n\r\n  const getList = item => {\r\n    setMode(\"\");\r\n    setList(item);\r\n    setCurrentValue(0);\r\n  }\r\n\r\n  const saveLocal = (e) => {\r\n    localStorage.setItem(\"list\", JSON.stringify(e));\r\n  }\r\n\r\n  const saveTitle = e => {\r\n    localStorage.setItem(\"title\", JSON.stringify(e));\r\n  }\r\n\r\n  const saveCurrentValue = e => {\r\n    localStorage.setItem(\"id\", JSON.stringify(e));\r\n  }\r\n  return (\r\n    <>\r\n      <Header text={mainTitle} onClick={handleTitleClick}/>\r\n      <Nav list={list} onClick={handleNavClick}/>\r\n      <Controls saveLocal={saveLocal} getList={getList} list={list} currentValue={currentValue} controls={controls} onClick={handleControlClick}/>\r\n      <Contents saveCurrentValue={saveCurrentValue} saveTitle={saveTitle} saveLocal={saveLocal} getInfo={getInfo} mainTitle={mainTitle} getProps={getProps} mode={mode} id={id} mainTitle={mainTitle} list={list} onClick={handleContentsClick} currentValue={currentValue}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}